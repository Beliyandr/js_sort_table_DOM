{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,EAAG,SAAS,gBAAgB,CAAC,eACrC,EAAQ,EAAG,SAAS,gBAAgB,CAAC,eACrC,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAY,CAChB,KAAM,OACN,SAAU,WACV,IAAK,MACL,OAAQ,QACV,EAEM,EAAW,CACf,KAAM,EACN,SAAU,EACV,IAAK,EACL,OAAQ,CACV,EAkDA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAK,gBAAgB,CAAC,QAAS,SAAC,CAAhC,GACE,AAlDJ,SAAsB,CAAK,CAAE,CAAQ,EACnC,IAAM,EAAc,CAAQ,CAAC,EAAS,CAEtC,OAAQ,GACN,KAAK,EAAU,IAAI,CACnB,KAAK,EAAU,QAAQ,CACrB,EACG,IAAI,CAAC,SAAC,CAAA,CAAG,CADZ,EAEI,OAAO,EAAE,QAAQ,CAAC,EAAY,CAAC,WAAW,CAAC,aAAa,CACtD,EAAE,QAAQ,CAAC,EAAY,CAAC,WAAW,CAEvC,GACC,GAAG,CAAC,SAAC,CADN,EAEE,EAAM,MAAM,CAAC,EACf,GACF,KAEF,MAAK,EAAU,GAAG,CAChB,EACG,IAAI,CAAC,SAAC,CAAA,CAAG,CADZ,EAEI,MACE,CAAC,EAAE,QAAQ,CAAC,EAAY,CAAC,WAAW,CACpC,CAAC,EAAE,QAAQ,CAAC,EAAY,CAAC,WAAW,AAExC,GACC,GAAG,CAAC,SAAC,CADN,EAEE,EAAM,MAAM,CAAC,EACf,GACF,KAEF,MAAK,EAAU,MAAM,CACnB,EACG,IAAI,CAAC,SAAC,CAAA,CAAG,CADZ,EAEI,MACE,CAAC,EAAE,QAAQ,CAAC,EAAY,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,IAC3D,CAAC,EAAE,QAAQ,CAAC,EAAY,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,GAE/D,GACC,GAAG,CAAC,SAAC,CADN,EAEE,EAAM,MAAM,CAAC,EACf,EAKN,CACF,EAIiB,EAAM,EAAE,MAAM,CAAC,WAAW,CACzC,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar head = _to_consumable_array(document.querySelectorAll(\"thead > tr\"));\nvar body = _to_consumable_array(document.querySelectorAll(\"tbody > tr\"));\nvar tbody = document.querySelector(\"tbody\");\nvar sortElems = {\n    Name: \"Name\",\n    Position: \"Position\",\n    Age: \"Age\",\n    Salary: \"Salary\"\n};\nvar position = {\n    Name: 0,\n    Position: 1,\n    Age: 2,\n    Salary: 3\n};\nfunction sortTableASC(elems, sortName) {\n    var positionNow = position[sortName];\n    switch(sortName){\n        case sortElems.Name:\n        case sortElems.Position:\n            elems.sort(function(a, b) {\n                return a.children[positionNow].textContent.localeCompare(b.children[positionNow].textContent);\n            }).map(function(tr) {\n                tbody.append(tr);\n            });\n            break;\n        case sortElems.Age:\n            elems.sort(function(a, b) {\n                return +a.children[positionNow].textContent - +b.children[positionNow].textContent;\n            }).map(function(tr) {\n                tbody.append(tr);\n            });\n            break;\n        case sortElems.Salary:\n            elems.sort(function(a, b) {\n                return +a.children[positionNow].textContent.slice(1).replace(\",\", \"\") - +b.children[positionNow].textContent.slice(1).replace(\",\", \"\");\n            }).map(function(tr) {\n                tbody.append(tr);\n            });\n            break;\n        default:\n            break;\n    }\n}\nhead.forEach(function(item) {\n    item.addEventListener(\"click\", function(e) {\n        sortTableASC(body, e.target.textContent);\n    });\n});\n\n//# sourceMappingURL=index.a8274cb0.js.map\n","'use strict';\n\nconst head = [...document.querySelectorAll('thead > tr')];\nconst body = [...document.querySelectorAll('tbody > tr')];\nconst tbody = document.querySelector('tbody');\n\nconst sortElems = {\n  Name: 'Name',\n  Position: 'Position',\n  Age: 'Age',\n  Salary: 'Salary',\n};\n\nconst position = {\n  Name: 0,\n  Position: 1,\n  Age: 2,\n  Salary: 3,\n};\n\nfunction sortTableASC(elems, sortName) {\n  const positionNow = position[sortName];\n\n  switch (sortName) {\n    case sortElems.Name:\n    case sortElems.Position:\n      elems\n        .sort((a, b) => {\n          return a.children[positionNow].textContent.localeCompare(\n            b.children[positionNow].textContent,\n          );\n        })\n        .map((tr) => {\n          tbody.append(tr);\n        });\n      break;\n\n    case sortElems.Age:\n      elems\n        .sort((a, b) => {\n          return (\n            +a.children[positionNow].textContent -\n            +b.children[positionNow].textContent\n          );\n        })\n        .map((tr) => {\n          tbody.append(tr);\n        });\n      break;\n\n    case sortElems.Salary:\n      elems\n        .sort((a, b) => {\n          return (\n            +a.children[positionNow].textContent.slice(1).replace(',', '') -\n            +b.children[positionNow].textContent.slice(1).replace(',', '')\n          );\n        })\n        .map((tr) => {\n          tbody.append(tr);\n        });\n      break;\n\n    default:\n      break;\n  }\n}\n\nhead.forEach((item) => {\n  item.addEventListener('click', (e) => {\n    sortTableASC(body, e.target.textContent);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","head","document","querySelectorAll","body","tbody","querySelector","sortElems","Name","Position","Age","Salary","position","forEach","item","addEventListener","e","sortTableASC","elems","sortName","positionNow","sort","a","b","children","textContent","localeCompare","map","tr","append","replace","target"],"version":3,"file":"index.a8274cb0.js.map"}